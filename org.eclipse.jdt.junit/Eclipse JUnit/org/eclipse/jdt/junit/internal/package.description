Description of package "org.eclipse.junit.internal":
----------------------------------------------------

- ApplicationWizard
	- The wizard specified by the Launcher to designate the elements to launch

- ApplicationWizardPage
	- The main page in a JUnitApplicationWizard. Presents the
		user with a list of launchable elements - from which the user must choose. 

- BaseLauncher
	- Abstract base implementation of the test launcher.
	- Extended classes have to override: 
		VMRunnerConfiguration configureVM(IType[] testTypes, int port)

- BaseLauncherUtil
	- Static utilities for the BaseLauncher.

- CounterPanel
	- Panel that informs the user about number of tests to run,
		of test that are finished, of errors and failures.
		there is also a progressbar that informs the user.

- FailureDetailView
	- View that shows the stack trace of failed tests.

- FailureRunView
	- RunView that implements ITestRunView.
	- Shows the failed tests.

- HierarchyRunView
	- RunView that implements ITestRunView.
	- Shows the test hierarchy as a tree.

- IRunViewContext
	- interface that specifies what a RunView implementing ITestRunView
		knows about the TestRunnerUI.

- ITestRunListener
	- String/Int based interface for Listeners that want 
		register at 'org.eclipse.junit.internal.TestRunner'

- ITestRunView
	- interface that specifies what a TestRunView can do.

- JUnitPlugin
	- extension of AbstractUIPlugin
	- provides only: getDefault(), getActiveShell() and getPluginID()

- Launcher
	- concrete implementation of the BaseLauncher
	- implements 'configureVM(...)'

- LauncherUtil
	- includes only one static utility method for the Launcher
	- this method constructs the classPath for the VMRunnerConfiguration 
		that is constructed in the Launcher

- MessagesIds
	- IDs of the protocol that is used in the ITestRunListener
	- TestRunner and TestRunnerUI are talking with this IDs over a socket connection

- SearchEngine
	- extension for the SearchEngine that is looking for Test classes and for 
		Classes that provide a static Test suite() method

- SearchUtil
	- Static utility methods for the SearchEngine

- SocketUtil
	- Static Helper class for finding a local unused port

- TabFolerLayout
	- copy of  org.eclipse.jdt.internal.ui.util.TabFolderLayout
		that fixes a layout PR with TabFolders under linux

- TestInfo
 	- Util for storing information of tests that were run

- TestRunner
	- Implementation of a TestRunner. 
	- If an argument '-port portNr' is specified the Runner sends all messages to
		that port.
	- Additional ITestRunListeners and junit.framework.TestListeners can register at TestRunner

- TestRunnerUI
	- An extension of 'org.eclipse.ui.part.ViewPart' - the view of the plugin.
	- Implements ITestRunListener; the messages are sendet by the TestRunner.

- TestRunnerUIutils
	- Static utility methods for the UI

- TextTestListener
	- text listener implementing the ITestRunListener interface
	- default listener if no port and no listener are specified
		when calling org.eclipse.junit.internal.TestRunner
		
- Preference Page
	- here you can turn off/on, configure the filtering of the stack trace
		that is shown in the FailureDetailView
		

