<?xml version="1.0"?>

<!--
(c) Copyright IBM Corp. 2000, 2001.
All Rights Reserved.
-->

<templates>

  <!-- java -->

  <template description="iterate over array" name="for" context="java"
>for (int ${index} = 0; ${index} &lt; ${array}.length; ${index}++) {
	${type} ${element} = ${array}[${index}];
	${cursor}
}</template>

  <template description="iterate over collection" name="for" context="java"
>for (Iterator ${iterator} = ${collection}.iterator(); ${iterator}.hasNext(); ) {
	${type} ${element} = (${type}) ${iterator}.next();
	${cursor}
}</template>

  <template description="iterate with enumeration" name="while" context="java"
>while (${enumeration}.hasMoreElements()) {
	${type} ${element} = (${type}) ${enumeration}.nextElement();
	${cursor}
}</template>

  <template description="iterate with iterator" name="while" context="java"
>while (${iterator}.hasNext()) {
	${type} ${element} = (${type}) ${iterator}.next();
	${cursor}
}</template>

  <template description="do while statement" name="do" context="java"
>do {
	${cursor}
} while (${condition});</template>

  <template description="switch case statement" name="switch" context="java"
>switch (${key}) {
	case ${value}:
		${cursor}
		break;

	default:
		break;
}</template>

  <template description="if statement" name="if" context="java"
>if (${condition}) {
	${cursor}
}</template>

  <template description="if else statement" name="ifelse" context="java"
>if (${condition}) {
	${cursor}
} else {
	
}</template>

  <template description="else if block" name="elseif" context="java"
>else if (${condition}) {
	${cursor}
}</template>

  <template description="else block" name="else" context="java"
>else {
	${cursor}
}</template>

  <template description="try catch block" name="try" context="java"
>try {
	${cursor}
} catch (${Exception} e) {
}</template>

  <template description="catch block" name="catch" context="java"
>catch (${Exception} e) {
	${cursor}
}</template>

  <template description="main method" name="main" context="java"
>public static void main(String arguments[]) {
	${cursor}
}</template>

  <template description="dynamic type test and cast" name="instanceof" context="java"
>if (${name} instanceof ${type}) {
	${type} ${new_name} = (${type}) ${name};
	${cursor}
}</template>

  <template description="dynamic cast" name="cast" context="java"
>${type} ${new_name} = (${type}) ${name};
}</template>

  <template description="convert collection to array" name="toarray" context="java"
  >${type}[] ${array} = (${type}[]) ${collection}.toArray(new ${type}[${collection}.size()]);</template>

  <template description="copyright information" name="copyright" context="java"
>/*
 * (c) Copyright 2001 MyCorporation.
 * All Rights Reserved.
 */
</template>

  <template description="print to standard out" name="stdout" context="java"
  >System.out.println(&quot;${cursor}&quot;);</template>

  <template description="print to standard error" name="stderr" context="java"
  >System.err.println(&quot;${cursor}&quot;);</template>

  <!-- javadoc -->

  <template description="&lt;code&gt;&lt;/code&gt;" name="&lt;code&gt;" context="javadoc"
  >&lt;code&gt;${cursor}&lt;/code&gt;</template>

  <template description="&lt;code&gt;null&lt;/code&gt;" name="&lt;code&gt;" context="javadoc"
  >&lt;code&gt;null&lt;/code&gt;</template>

  <template description="&lt;pre&gt;&lt;/pre&gt;" name="&lt;pre&gt;" context="javadoc"
  >&lt;pre&gt;${cursor}&lt;/pre&gt;</template>

  <template description="&lt;b&gt;&lt;/b&gt;" name="&lt;b&gt;" context="javadoc"
  >&lt;b&gt;${cursor}&lt;/b&gt;</template>

  <template description="&lt;i&gt;&lt;/i&gt;" name="&lt;i&gt;" context="javadoc"
  >&lt;i&gt;${cursor}&lt;/i&gt;</template>

</templates>
