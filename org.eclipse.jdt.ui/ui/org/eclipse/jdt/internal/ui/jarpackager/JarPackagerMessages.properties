#########################################
# (c) Copyright IBM Corp. 2000, 2001.
# All Rights Reserved.
#########################################

CreateJarActionDelegate.jarExportError.title=JAR Export Error
CreateJarActionDelegate.jarExportError.message=Creation of JAR failed
CreateJarActionDelegate.jarExportProblems=JAR Export Problems

JarPackage.confirmCreate.title=Confirm Create
JarPackage.confirmCreate.message=The location for the JAR file does not exist. Would you like to create it?
JarPackage.confirmReplace.title=Confirm Replace
JarPackage.confirmReplace.message=The file \'\'{0}\'\' already exists.\nDo you want to overwrite it?

JarPackageWizard.windowTitle=JAR Packager
JarPackageWizard.windowTitle=JAR Packager
JarPackageWizard.jarExportError.title=JAR Export Error
JarPackageWizard.jarExportError.message=Creation of JAR failed
JarPackageWizard.jarExportProblems.title=JAR Export Problems

OpenJarPackageWizardDelegate.badXmlFormat=Bad XML format: 
OpenJarPackageWizardDelegate.error.openJarPackager.title=Open JAR Packager Error
OpenJarPackageWizardDelegate.error.openJarPackager.message=Reading JAR package description from file failed.\n
OpenJarPackageWizardDelegate.jarDescriptionReaderWarnings.title=JAR Description Reader Warnings

JavaElementContentProvider.error.childNotPresent.message=Child not present

JarWriter.error.jarSpecificationIsNull=The JAR specification is null
JarWriter.error.invalidJarSpecification=The JAR package specification is invalid
JarWriter.error.fileNotAccessible=File not accessible: 

JarFileExportOperation.exportFinishedWithWarnings=JAR export finished with warnings:
JarFileExportOperation.underlyingResourceNotFound=Underlying resource not found for compilation unit: {0}
JarFileExportOperation.resourceNotFound=Resource not found or not  accessible: {0}
JarFileExportOperation.resourceNotLocal=Resource could not be retrieved locally: {0}
JarFileExportOperation.projectNatureNotDeterminable=Project nature could not be determined for: {0}
JarFileExportOperation.javaPackageNotDeterminable=Java package could not be found for: {0}
JarFileExportOperation.ioErrorDuringExport=IO Error exporting {0}
JarFileExportOperation.coreErrorDuringExport=Core Error exporting {0}
JarFileExportOperation.errorDuringExport=Error exporting {0}
JarFileExportOperation.outputContainerNotAccessible=Output container not accessible
JarFileExportOperation.classFileOnClasspathNotAccessible=class file(s) on classpath not found or not  accessible {0}
JarFileExportOperation.resourceOnCasspathNotAccessible=Resource on classpath not found or not  accessible {0}
JarFileExportOperation.invalidClassFileFormat=Class file has invalid format: {0}
JarFileExportOperation.ioErrorDuringClassFileLookup=IOError while looking for class file: {0}
JarFileExportOperation.creationOfSomeJARsFailed=Creation of some JARs failed:
JarFileExportOperation.jarCreationFailed=JAR creation failed:
JarFileExportOperation.exportedWithCompile=Exported with compile
JarFileExportOperation.notExportedDueToCompile=Not exported due to compile
JarFileExportOperation.errors=\ errors: {0}
JarFileExportOperation.warnings=\ warnings: {0}
JarFileExportOperation.exporting=Exporting:
JarFileExportOperation.jarCreationFailedSeeDetails=JAR creation failed. Details follow
JarFileExportOperation.savingFiles=Saving files...
JarFileExportOperation.unableToCreateJarFle=Unable to create JAR file: {0}
JarFileExportOperation.unableToCreateJarFileDueToInvalidManifest=Unable to create JAR file because specified manifest is not OK: {0}
JarFileExportOperation.unableToCloseJarFile=Unable to close the JAR file: {0}
JarFileExportOperation.noExportTypeChosen=No export type chosen
JarFileExportOperation.noResourcesSelected=No resources selected
JarFileExportOperation.invalidJarLocation=Invalid JAR location
JarFileExportOperation.manifestDoesNotExist=Manifest does not exist
JarFileExportOperation.invalidMainClass=Main class is not valid
JarFileExportOperation.fileUnsaved=Unsaved file: {0}
JarFileExportOperation.errorSavingManifest=Saving manifest in workspace failed
JarFileExportOperation.errorSavingDescription=Saving description in workspace failed
JarFileExportOperation.errorReadingJarPackageFromDescription=Error reading JAR package from description
JarFileExportOperation.errorReadingFile=Error reading {0}: {1}
JarFileExportOperation.badXmlFormat=Bad XML format in {0}: {1}
JarFileExportOperation.errorClosingJarPackageDescriptionReader=Error closing JAR package description reader for {0}

JarOptionsPage.title=JAR Packaging Options
JarOptionsPage.description=Define the options for the JAR export
JarOptionsPage.howReportProblems.label=How should problems be reported?
JarOptionsPage.showWarnings.text=&Show warnings when export is done
JarOptionsPage.showErrors.text=S&how errors when export is done
JarOptionsPage.howTreatProblems.label=How should class files with problems be treated?
JarOptionsPage.exportErrors.text=&Export class files with compile errors
JarOptionsPage.exportWarnings.text=E&xport class files with compile warnings
JarOptionsPage.saveDescription.text=Sa&ve the description of this JAR in the workspace
JarOptionsPage.saveAsDialog.title=Save As
JarOptionsPage.saveAsDialog.message=Select location and name for the descripton
JarOptionsPage.error.descriptionMustBeAbsolute=&Description file path must be absolute (start with /)
JarOptionsPage.error.descriptionMustNotBeExistingContainer=The description file location must not be an existing container
JarOptionsPage.error.descriptionContainerDoesNotExist=Container for description file does not exist
JarOptionsPage.error.invalidDescriptionExtension=Description file extension must be \'\'.{0}\'\'
JarOptionsPage.descriptionFile.label=&Description file:
JarOptionsPage.browseButton.text=B&rowse...

JarPackageWizardPage.title=JAR Package Specification
JarPackageWizardPage.description=Define what resources to package into which JAR
JarPackageWizardPage.whatToExport.label=&What do you want to export?
JarPackageWizardPage.whereToExport.label=Where do you want to export resources to?
JarPackageWizardPage.options.label=Options:
JarPackageWizardPage.compress.text=Co&mpress the contents of the JAR file
JarPackageWizardPage.overwrite.text=&Overwrite existing files without warning
JarPackageWizardPage.destination.label=&JAR file:
JarPackageWizardPage.error.exportDestinationMustNotBeDirectory=Export destination must be a JAR file, not a directory.
JarPackageWizardPage.error.jarFileExistsAndNotWritable=JAR file already exists and cannot be overwritten.
JarPackageWizardPage.browseButton.text=B&rowse...
JarPackageWizardPage.saveAsDialog.title=Save As
JarPackageWizardPage.saveAsDialog.message=Select location and name for the descripton
JarPackageWizardPage.exportClassFiles.text=Export generated &class files and resources
JarPackageWizardPage.exportJavaFiles.text=Export java &source files and resources
JarPackageWizardPage.descriptionFile.text=Description file:
JarPackageWizardPage.error.noExportTypeChecked=No export type checked.

JarPackageReader.error.badFormat=Bad format
JarPackageReader.jarPackageReaderWarnings=JAR Package Reader Warnings
JarPackageReader.error.illegalValueForBooleanAttribute=Bad format: Illegal value for boolean attribute
JarPackageReader.error.tagNameNotFound=Bad format: Tag \'name\' not found
JarPackageReader.error.tagPathNotFound=Bad format: Tag \'path\' not found
JarPackageReader.error.tagHandleIdentifierNotFoundOrEmpty=Bad format: Tag \'handleIdentifier\' not found or empty
JarPackageReader.warning.javaElementDoesNotExist=Warning: Java element does not exist in workspace
JarPackageReader.error.duplicateTag=Bad format: Duplicate Tag: {0}
JarPackageReader.warning.mainClassDoesNotExist=Warning: Main class type does not exist in workspace

JarManifestWizardPage.title=JAR Manifest Specification
JarManifestWizardPage.description=Customize the manifest file for the JAR package
JarManifestWizardPage.manifestSource.label=Where does the manifest come from?
JarManifestWizardPage.sealingHeader.label=Which packages must be sealed?
JarManifestWizardPage.mainClassHeader.label=Which class is the application\'s entry point?
JarManifestWizardPage.genetateManifest.text=&Generate the manifest file
JarManifestWizardPage.saveManifest.text=Sa&ve the manifest in the workspace
JarManifestWizardPage.reuseManifest.text=&Reuse and save the manifest in the workspace
JarManifestWizardPage.useManifest.text=&Use existing manifest from workspace
JarManifestWizardPage.newManifestFile.text=&Manifest file:
JarManifestWizardPage.newManifestFileBrowseButton.text=Br&owse...
JarManifestWizardPage.manifestFile.text=M&anifest file:
JarManifestWizardPage.manifestFileBrowse.text=Bro&wse...
JarManifestWizardPage.sealJar.text=Seal the &JAR
JarManifestWizardPage.unsealPackagesButton.text=Deta&ils...
JarManifestWizardPage.sealPackagesButton.text=Seal some &packages
JarManifestWizardPage.sealedPackesDetailsButton.text=D&etails...
JarManifestWizardPage.mainClass.label=Main class:
JarManifestWizardPage.mainClassBrowseButton.text=Brow&se...
JarManifestWizardPage.downloadExtension.label=Class-Path:
JarManifestWizardPage.saveAsDialog.title=Save As
JarManifestWizardPage.saveAsDialog.message=Select location and name for the manifest
JarManifestWizardPage.manifestSelectionDialog.title=Manifest Selection
JarManifestWizardPage.manifestSelectionDialog.message=&Select the manifest file which should be added to the JAR:
JarManifestWizardPage.error.onlyOneManifestMustBeSelected=Only one manifest must be selected
JarManifestWizardPage.error.noResourceSelected=No resources selected
JarManifestWizardPage.mainTypeSelectionDialog.title=Select Main Class
JarManifestWizardPage.mainTypeSelectionDialog.message=&Select the class which is the application\'s entry point:
JarManifestWizardPage.sealedPackagesSelectionDialog.title=Seal Packages
JarManifestWizardPage.sealedPackagesSelectionDialog.message=S&elect the packages which should be sealed in the JAR:
JarManifestWizardPage.unsealedPackagesSelectionDialog.title=Unseal Packages
JarManifestWizardPage.unsealedPackagesSelectionDialog.message=S&elect the packages which should be unsealed in the JAR:
JarManifestWizardPage.jarSealed=JAR sealed                                            \ 
JarManifestWizardPage.jarSealedExceptOne=JAR sealed, but 1 package unsealed                                            \ 
JarManifestWizardPage.jarSealedExceptSome=JAR sealed, but {0} packages unsealed                                            \ 
JarManifestWizardPage.nothingSealed=Nothing sealed                                            \ 
JarManifestWizardPage.onePackageSealed=1 package sealed                                            \ 
JarManifestWizardPage.somePackagesSealed={0} packages sealed                                            \ 
JarManifestWizardPage.error.manifestPathMustBeAbsolute=Manifest file path must be absolute (start with /)
JarManifestWizardPage.error.manifestMustNotBeExistingContainer=The manifest file location must not be an existing container
JarManifestWizardPage.error.manifestContainerDoesNotExist=Container for manifest file does not exist
JarManifestWizardPage.error.invalidManifestFile=Invalid manifest file specified
JarManifestWizardPage.error.unsealedPackagesNotInSelection=Some of the unsealed packages are no longer within the selection
JarManifestWizardPage.error.sealedPackagesNotInSelection=Some of the sealed packages are no longer within the selection
JarManifestWizardPage.error.jarPackageWizardError.title=JAR Package Wizard Error
JarManifestWizardPage.error.jarPackageWizardError.message=The package {0} seems to be corrupt. It will be ignored

JarWriter.error.couldNotGetXmlBuilder=Could not get XML builder
JarWriter.output.title=--- JAR Package Definiton: ---
JarWriter.output.usedToInit=Used to initialize: {0}
JarWriter.output.exportBin=Export class files: {0}
JarWriter.output.exportJava=Export java files: {0}
JarWriter.output.jarFileName=JAR file: {0}
JarWriter.output.compressed=Compressed: {0}
JarWriter.output.overwrite=Overwrite: {0}
JarWriter.output.saveDescription=Save description: {0}
JarWriter.output.descriptionFile=Description file: {0}
JarWriter.output.lineSeparator=--
JarWriter.output.generateManifest=Generate manifest {0}
JarWriter.output.saveManifest=Save manifest: {0}
JarWriter.output.reuseManifest=Reuse manifest: {0}
JarWriter.output.manifestName=Manifest {0}
JarWriter.output.jarSealed=JAR sealed: {0}
JarWriter.output.mainClass=Main-Class: {0}
JarWriter.output.downloadExtensionPath=Download extension path: {0}
