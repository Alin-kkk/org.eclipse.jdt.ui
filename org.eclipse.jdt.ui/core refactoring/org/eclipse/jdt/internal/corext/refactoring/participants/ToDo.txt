- remove getElement from participant interface.
- allow sharing of participants for different element types.
  <renameParticipant
    id="..."
    share="true";
  />
- object state. Implement bean object state interface.
- how to implement special web type rename that renames interface and implementation.
  o provide a special processor that overrides normal Java processor if project
    nature is webnature. This means processor gets scopeState as well.

- package rename. At end we delete an empty folder. Should we sent out a folder delete
  modification. If so participants have to know that the folder doesn't have any children
  upon deletion, but it might have some upon precondition checking. So for resource 
  modifications we have to describe some sort of postcondition. For example: folder
  will be empty on deletion. Can be derived from the ResourceModifications object.
  
- IRefactoringProcessor should not have a method getResourceModification since there
  might be refactorings which don't modifiy resources. For example a database only
  application might want to describe high level database operations as low level
  SQL ops.
  
- what happens if a web plug-in for some reason registers on resource move and on
  package rename. Then it might clash if the package rename also tries to handle
  the move. One argument is that the plug-in knows about its participants and can
  avoid this in code. Another option is that a participant can specify if it is
  interested in the comupted resource modifications. Can be a property for some
  state XML element.


======================================= UI ===============================================
  
- UI: Label and image of preview viewer. Must be determined by the change element
  structor creator.
  
- NeedsPane flag on previewer ??

- Make pane handling consistent in Error and Preview. In error the pane is for free
  in preview the viewer has to provide the pane.
  
- Composite change in preview tree. Strip away root composite that have only one child.