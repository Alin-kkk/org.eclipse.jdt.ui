/* * (c) Copyright IBM Corp. 2000, 2001. * All Rights Reserved. */package org.eclipse.jdt.internal.core.refactoring.cus;import org.eclipse.jdt.core.ICompilationUnit;import org.eclipse.jdt.internal.core.refactoring.base.Refactoring;import org.eclipse.jdt.internal.core.refactoring.text.ITextBufferChangeCreator;import org.eclipse.jdt.internal.core.refactoring.Assert;abstract class CompilationUnitRefactoring extends Refactoring{		private ICompilationUnit fCu;	private ITextBufferChangeCreator fTextBufferChangeCreator;		CompilationUnitRefactoring(ITextBufferChangeCreator changeCreator, ICompilationUnit cu){		Assert.isNotNull(cu);		Assert.isNotNull(changeCreator);		fCu= cu;		fTextBufferChangeCreator= changeCreator;	}		public final ICompilationUnit getCompilationUnit() {		return fCu;	}	final ITextBufferChangeCreator getTextBufferChangeCreator() {		return fTextBufferChangeCreator;	}		String getSimpleCUName(){		return removeFileNameExtension(fCu.getElementName());	}	/**	 * Removes the extension (whatever comes after the last '.') from the given file name.	 */	static String removeFileNameExtension(String fileName) {		if (fileName.lastIndexOf(".") == -1) //$NON-NLS-1$			return fileName;		return fileName.substring(0, fileName.lastIndexOf(".")); //$NON-NLS-1$	}}