/* * (c) Copyright IBM Corp. 2000, 2001. * All Rights Reserved. */package org.eclipse.jdt.internal.core.refactoring.cus;import org.eclipse.jdt.core.ICompilationUnit;import org.eclipse.jdt.internal.core.refactoring.base.Refactoring;import org.eclipse.jdt.internal.core.refactoring.text.ITextBufferChangeCreator;import org.eclipse.jdt.internal.core.refactoring.Assert;public abstract class CompilationUnitRefactoring extends Refactoring{		private ICompilationUnit fCu;	private ITextBufferChangeCreator fTextBufferChangeCreator;		CompilationUnitRefactoring(ITextBufferChangeCreator changeCreator, ICompilationUnit cu){		Assert.isNotNull(cu);		fCu= cu;		Assert.isNotNull(changeCreator, "change creator");		fTextBufferChangeCreator= changeCreator;	}		/**	 * Gets the cu	 * @return Returns a ICompilationUnit	 */	protected final ICompilationUnit getCu() {		return fCu;	}	/**	 * Gets the textBufferChangeCreator	 * @return Returns a ITextBufferChangeCreator	 */	protected final ITextBufferChangeCreator getTextBufferChangeCreator() {		return fTextBufferChangeCreator;	}		protected String getSimpleCUName(){		return removeFileNameExtension(fCu.getElementName());	}	/**	 * Removes the extension (whatever comes after the last '.') from the given file name.	 */	protected static String removeFileNameExtension(String fileName) {		if (fileName.lastIndexOf(".") == -1)			return fileName;		return fileName.substring(0, fileName.lastIndexOf("."));	}}