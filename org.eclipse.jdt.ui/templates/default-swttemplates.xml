<?xml version="1.0" encoding="UTF-8"?>

<!--
/*******************************************************************************
 * Copyright (c) 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
-->

<templates>


<!-- ************************************************** Basic Widgets ************************************************** -->


<template 
	name="Label" 
	description="%SWTTemplates.label" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.label" 
	context="swt" enabled="true"
	
>Label ${label:newName(org.eclipse.swt.widgets.Label)}= new Label(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.NONE, SWT.WRAP, 'SWT.SEPARATOR | SWT.HORIZONTAL', 'SWT.SEPARATOR | SWT.VERTICAL')});
${label}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical:link(TOP, CENTER, BOTTOM, FILL)}, ${hex:link(false, true)}, ${vex:link(false, true)}));
${label}.setText(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="Image" 
	description="%SWTTemplates.image" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.image" 
	context="swt" enabled="true"
	
>Label ${image:newName(org.eclipse.swt.widgets.Label)}= new Label(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.NONE, SWT.BORDER)});
${image}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical:link(TOP, CENTER, BOTTOM, FILL)}, ${hex:link(false, true)}, ${vex:link(false, true)}));
${image}.setImage(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="Button" 
	description="%SWTTemplates.button" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.button" 
	context="swt" enabled="true"
	
>Button ${button:newName(org.eclipse.swt.widgets.Button)}= new Button(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.PUSH, SWT.TOGGLE, SWT.RADIO, SWT.CHECK, SWT.FLAT)});
${button}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical:link(TOP, CENTER, BOTTOM, FILL)}, ${hex:link(false, true)}, ${vex:link(false, true)}));
${button}.setText(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="Link" 
	description="%SWTTemplates.link" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.link" 
	context="swt" enabled="true"
	
>Link ${link:newName(org.eclipse.swt.widgets.Link)}= new Link(${parent:var(org.eclipse.swt.widgets.Composite)}, SWT.NONE);
${link}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical:link(TOP, CENTER, BOTTOM, FILL)}, ${hex:link(false, true)}, ${vex:link(false, true)}));
${link}.setText(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="Combo" 
	description="%SWTTemplates.combo" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.combo" 
	context="swt" enabled="true"
	
>Combo ${combo:newName(org.eclipse.swt.widgets.Combo)}= new Combo(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.DROP_DOWN, 'SWT.DROP_DOWN | SWT.READ_ONLY')});
${combo}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(CENTER, FILL, TOP, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(false, true)}));
${combo}.setItems(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="Scale" 
	description="%SWTTemplates.scale" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.scale" 
	context="swt" enabled="true"
	
>Scale ${scale:newName(org.eclipse.swt.widgets.Scale)}= new Scale(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.HORIZONTAL, SWT.VERTICAL)});
${scale}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(BEGINNING, FILL, CENTER, END)}, SWT.${vertical:link(TOP, FILL, CENTER, BOTTOM)}, ${hex:link(false, true)}, ${vex:link(false, true)}));
${scale}.setMaximum(${max:link(100)});
${scale}.setIncrement(${inc:link(5)});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="Spinner" 
	description="%SWTTemplates.spinner" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.spinner" 
	context="swt" enabled="true"
	
>Spinner ${spinner:newName(org.eclipse.swt.widgets.Spinner)}= new Spinner(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.BORDER, 'SWT.WRAP | SWT.BORDER', 'SWT.READ_ONLY | SWT.BORDER', 'SWT.READ_ONLY | SWT.WRAP | SWT.BORDER', SWT.WRAP, SWT.READ_ONLY)});
${spinner}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical:link(TOP, CENTER, BOTTOM, FILL)}, ${hex:link(false, true)}, ${vex:link(false, true)}));
${spinner}.setMaximum(${max:link(10)});
${spinner}.setIncrement(${inc:link(1)});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>


<!-- ************************************************** Advanced Widgets ************************************************** -->


<template 
	name="Browser" 
	description="%SWTTemplates.browser" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.browser" 
	context="swt" enabled="true"
	
>Browser ${browser:newName(org.eclipse.swt.browser.Browser)}= new Browser(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.NONE, SWT.MOZILLA)});
${browser}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${browser}.setUrl(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="DateTime" 
	description="%SWTTemplates.datetime" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.datetime" 
	context="swt" enabled="true"
	
>DateTime ${dateTime:newName(org.eclipse.swt.widgets.DateTime)}= new DateTime(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link('SWT.CALENDAR | SWT.SHORT', 'SWT.CALENDAR | SWT.MEDIUM', 'SWT.CALENDAR | SWT.LONG', 'SWT.TIME | SWT.SHORT', 'SWT.TIME | SWT.MEDIUM', 'SWT.TIME | SWT.LONG', 'SWT.DATE | SWT.SHORT', 'SWT.DATE | SWT.MEDIUM', 'SWT.DATE | SWT.LONG')});
${dateTime}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>


<!-- ************************************************** Containers ************************************************** -->


<template 
	name="Composite" 
	description="%SWTTemplates.composite" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.gridcomposite" 
	context="swt" enabled="true"
	
>Composite ${composite:newName(org.eclipse.swt.widgets.Composite)}= new Composite(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.NONE, SWT.BORDER)});
${composite}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${composite}.setLayout(new ${layoutType:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns:link(1, 2, 3, 4, 5)}, ${equalColumns:link(false, true)}));
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="ScrolledComposite" 
	description="%SWTTemplates.scrolledcomposite" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.scrolledcomposite" 
	context="swt" enabled="true"
	
>ScrolledComposite ${scrolled:newName(org.eclipse.swt.custom.ScrolledComposite)} = new ScrolledComposite(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link('SWT.H_SCROLL | SWT.V_SCROLL', SWT.H_SCROLL, SWT.V_SCROLL)});
${scrolled}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${scrolled}.setExpandVertical(${exV:link(false, true)});
${scrolled}.setExpandHorizontal(${exH:link(false, true)});
${imp:import(org.eclipse.swt.SWT)}${cursor}

${scrolled}.setContent(${content});
Point ${contentSize:newName(org.eclipse.swt.graphics.Point)} = ${content}.computeSize(SWT.DEFAULT, SWT.DEFAULT);
${content}.setSize(${contentSize});
${scrolled}.setMinSize(${contentSize});</template>

<template 
	name="Group" 
	description="%SWTTemplates.group" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.group" 
	context="swt" enabled="true"
	
>Group ${group:newName(org.eclipse.swt.widgets.Group)}= new Group(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.NONE, SWT.SHADOW_ETCHED_IN, SWT.SHADOW_ETCHED_OUT, SWT.SHADOW_IN, SWT.SHADOW_OUT, SWT.SHADOW_NONE)});
${group}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(TOP, FILL, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(false, true)}));
${group}.setLayout(new ${layoutType:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns:link(1, 2, 3, 4, 5)}, ${equalColumns:link(false, true)}));
${group}.setText(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="SashForm" 
	description="%SWTTemplates.sashform" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.sashform" 
	context="swt" enabled="true"
	
>SashForm ${sash:newName(org.eclipse.swt.custom.SashForm)}= new SashForm(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.HORIZONTAL, SWT.VERTICAL)});
${sash}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${imp:import(org.eclipse.swt.SWT)}${cursor}

${sash}.setWeights(new int[] {1, 1});</template>


<!-- ************************************************** Master-Slave Containers ************************************************** -->


<template 
	name="ExpandBar" 
	description="%SWTTemplates.expandbar" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.expandbar" 
	context="swt" enabled="true"
	
>ExpandBar ${bar:newName(org.eclipse.swt.widgets.ExpandBar)}= new ExpandBar(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.V_SCROLL, SWT.NONE)});
${bar}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="ExpandItem" 
	description="%SWTTemplates.expanditem" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.expanditem" 
	context="swt" enabled="true"
	
>ExpandItem ${item:newName(org.eclipse.swt.widgets.ExpandItem)}= new ExpandItem(${parent:var(org.eclipse.swt.widgets.ExpandBar)}, SWT.NONE);
${item}.setText(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}

${item}.setControl(${control});
${item}.setHeight(${control}.computeSize(SWT.DEFAULT, SWT.DEFAULT).y);</template>

<template 
	name="TabFolder" 
	description="%SWTTemplates.tabfolder" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.tabfolder" 
	context="swt" enabled="true"
	
>TabFolder ${folder:newName(org.eclipse.swt.widgets.TabFolder)}= new TabFolder(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link(SWT.TOP, SWT.BOTTOM)});
${folder}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="TabItem" 
	description="%SWTTemplates.tabitem" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.tabitem" 
	context="swt" enabled="true"
	
>TabItem ${item:newName(org.eclipse.swt.widgets.TabItem)}= new TabItem(${parent:var(org.eclipse.swt.widgets.TabFolder)}, SWT.NONE);
${item}.setText(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}

${item}.setControl(${control});</template>


<!-- ************************************************** Text Viewers ************************************************** -->


<template 
	name="Text" 
	description="%SWTTemplates.text" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.text" 
	context="swt" enabled="true"
	
>Text ${text:newName(org.eclipse.swt.widgets.Text)}= new Text(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link('SWT.SINGLE | SWT.LEAD | SWT.BORDER', 'SWT.SINGLE | SWT.LEAD | SWT.READONLY | SWT.BORDER', 'SWT.SINGLE | SWT.LEAD | SWT.PASSWORD | SWT.BORDER', 'SWT.MULTI | SWT.WRAP | SWT.V_SCROLL | SWT.BORDER', 'SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER')});
${text}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(TOP, CENTER, BOTTOM, FILL)}, ${hex:link(true, false)}, ${vex:link(false, true)}));
${text}.setText(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="StyledText" 
	description="%SWTTemplates.styledtext" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.styledtext" 
	context="swt" enabled="true"
	
>StyledText ${text:newName(org.eclipse.swt.custom.StyledText)}= new StyledText(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link('SWT.V_SCROLL | SWT.H_SCROLL', 'SWT.V_SCROLL | SWT.H_SCROLL | SWT.READ_ONLY', 'SWT.WRAP | SWT.V_SCROLL', SWT.NONE, SWT.BORDER, SWT.FULL_SELECTION)});
${text}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${text}.setText(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="StyleRange" 
	description="%SWTTemplates.stylerange" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.stylerange" 
	context="swt" enabled="true"
	
>StyleRange ${range:newName(org.eclipse.swt.custom.StyleRange)}= new StyleRange();
${range}.start= ${start:link(0)};
${range}.length= ${length:link(0)};
${range}.foreground= ${fColor:link(null, 'Display.getDefault().getSystemColor(SWT.COLOR_BLACK)', 'Display.getDefault().getSystemColor(SWT.COLOR_WHITE)', 'Display.getDefault().getSystemColor(SWT.COLOR_RED)', 'Display.getDefault().getSystemColor(SWT.COLOR_BLUE)', 'Display.getDefault().getSystemColor(SWT.COLOR_GREEN)')};
${range}.background= ${bColor:link(null, 'Display.getDefault().getSystemColor(SWT.COLOR_BLACK)', 'Display.getDefault().getSystemColor(SWT.COLOR_WHITE)', 'Display.getDefault().getSystemColor(SWT.COLOR_RED)', 'Display.getDefault().getSystemColor(SWT.COLOR_BLUE)', 'Display.getDefault().getSystemColor(SWT.COLOR_GREEN)')};
${range}.fontStyle= ${fStyle:link(SWT.NORMAL, SWT.ITALIC, SWT.BOLD)};
${text:var(org.eclipse.swt.custom.StyledText)}.setStyleRange(${range});
${imp:import(org.eclipse.swt.SWT, org.eclipse.swt.widgets.Display)}${cursor}</template>


<!-- ************************************************** Structured Viewers ************************************************** -->


<template 
	name="List" 
	description="%SWTTemplates.list" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.list" 
	context="swt" enabled="true"
	
>List ${list:newName(org.eclipse.swt.widgets.List)}= new List(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link('SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL', 'SWT.MULTI | SWT.V_SCROLL', SWT.MULTI, 'SWT.SINGLE | SWT.V_SCROLL | SWT.H_SCROLL', 'SWT.SINGLE | SWT.V_SCROLL', SWT.SINGLE)});
${list}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${list}.setItems(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="Table" 
	description="%SWTTemplates.table" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.table" 
	context="swt" enabled="true"
	
>Table ${table:newName(org.eclipse.swt.widgets.Table)}= new Table(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link('SWT.SINGLE | SWT.FULL_SELECTION', 'SWT.MULTI | SWT.FULL_SELECTION', SWT.CHECK, SWT.NONE, SWT.VIRTUAL)});
${table}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${table}.setLinesVisible(${line:link(true, false)});
${table}.setHeaderVisible(${header:link(true, false)});
${imp:import(org.eclipse.swt.SWT)}${cursor}

for (int ${index} = 0; ${index} &lt; ${table}.getColumnCount(); ${index}++) {
	${table}.getColumn(${index}).pack();
}</template>

<template 
	name="TableColumn" 
	description="%SWTTemplates.tablecolumn" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.tablecolumn" 
	context="swt" enabled="true"
	
>TableColumn ${column:newName(org.eclipse.swt.widgets.TableColumn)}= new TableColumn(${parent:var(org.eclipse.swt.widgets.Table)}, ${style:link(SWT.LEAD, SWT.CENTER, SWT.TRAIL)});
${column}.setText(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="TableItem" 
	description="%SWTTemplates.tableitem" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.tableitem" 
	context="swt" enabled="true"
	
>TableItem ${item:newName(org.eclipse.swt.widgets.TableItem)}= new TableItem(${parent:var(org.eclipse.swt.widgets.Table)}, SWT.NONE);
${item}.setText(${count:link(0, 1, 2, 3, 4, 5)}, ${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="Tree" 
	description="%SWTTemplates.tree" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.tree" 
	context="swt" enabled="true"
	
>Tree ${tree:newName(org.eclipse.swt.widgets.Tree)}= new Tree(${parent:var(org.eclipse.swt.widgets.Composite)}, ${style:link('SWT.SINGLE | SWT.FULL_SELECTION', 'SWT.MULTI | SWT.FULL_SELECTION', SWT.CHECK, SWT.NONE, SWT.VIRTUAL)});
${tree}.setLayoutData(new ${type:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical:link(FILL, TOP, CENTER, BOTTOM)}, ${hex:link(true, false)}, ${vex:link(true, false)}));
${tree}.setLinesVisible(${line:link(true, false)});
${tree}.setHeaderVisible(${header:link(true, false)});
${imp:import(org.eclipse.swt.SWT)}${cursor}

for (int ${index} = 0; ${index} &lt; ${tree}.getColumnCount(); ${index}++) {
	${tree}.getColumn(${index}).pack();
}</template>

<template 
	name="TreeColumn" 
	description="%SWTTemplates.treecolumn" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.treecolumn" 
	context="swt" enabled="true"
	
>TreeColumn ${column:newName(org.eclipse.swt.widgets.TreeColumn)}= new TreeColumn(${parent:var(org.eclipse.swt.widgets.Tree)}, ${style:link(SWT.LEAD, SWT.CENTER, SWT.TRAIL)});
${column}.setText(${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

<template 
	name="TreeItem" 
	description="%SWTTemplates.treeitem" 
	id="org.eclipse.jdt.ui.text.codetemplates.swt.treeitem" 
	context="swt" enabled="true"
	
>TreeItem ${item:newName(org.eclipse.swt.widgets.TreeItem)}= new TreeItem(${parent:var(org.eclipse.swt.widgets.Tree, org.eclipse.swt.widgets.TreeItem)}, SWT.NONE);
${item}.setText(${count:link(0, 1, 2, 3, 4, 5)}, ${word_selection}${});
${imp:import(org.eclipse.swt.SWT)}${cursor}</template>

</templates>
