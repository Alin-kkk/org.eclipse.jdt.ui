###############################################################################
# Copyright (c) 2000, 2005 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################


ContextType.error.multiple.cursor.variables=Template has multiple cursor variables.

# Java Only stuff
CompilationUnitContextType.variable.description.file=Filename of compilation unit
CompilationUnitContextType.variable.description.primary.type.name=Filename without extension
CompilationUnitContextType.variable.description.enclosing.method=Enclosing method name
CompilationUnitContextType.variable.description.enclosing.type=Enclosing type name
CompilationUnitContextType.variable.description.enclosing.package=Enclosing package name
CompilationUnitContextType.variable.description.enclosing.project=Enclosing project name
CompilationUnitContextType.variable.description.enclosing.method.arguments=Argument names of enclosing method
CompilationUnitContextType.variable.description.return.type=Enclosing method return type

JavaContextType.variable.description.array=A proposal for an array
JavaContextType.variable.description.array.type=A proposal for the element type of an array
JavaContextType.variable.description.array.element=A proposal for the element name of an array
JavaContextType.variable.description.index=A proposal for an index (int)
JavaContextType.variable.description.collection=A proposal for a collection (java.util.Collection)
JavaContextType.variable.description.iterable=A proposal for an iterable (array or java.lang.Iterable)
JavaContextType.variable.description.iterable_type=A proposal for the element type of an iterable (array or java.lang.Iterable)
JavaContextType.variable.description.iterable_element=A proposal for the element name of an iterable (array or java.lang.Iterable)
JavaContextType.variable.description.iterator=A proposal for an iterator (java.util.Iterator)
JavaContextType.variable.description.todo=Todo task tag

JavaContext.error.title=Template Error
JavaContext.error.message=Template file incomplete or has errors.  You can load the default templates from the template preferences page (Java>Templates).

CodeTemplateContextType.variable.description.todo=Todo task tag
CodeTemplateContextType.variable.description.packdeclaration=Package declaration of the new type
CodeTemplateContextType.variable.description.typedeclaration=Generated type declaration
CodeTemplateContextType.variable.description.getterfieldname=The name of field to set or get
CodeTemplateContextType.variable.description.getterfieldtype=The type of the field to set or get
CodeTemplateContextType.variable.description.fieldname=The name of field
CodeTemplateContextType.variable.description.fieldtype=The type of the field
CodeTemplateContextType.variable.description.barefieldname=The name of field to set or get without pre- or suffix
CodeTemplateContextType.variable.description.param=The parameter passed into the setter method
CodeTemplateContextType.variable.description.typecomment=Content of code template 'typecomment'
CodeTemplateContextType.variable.description.exceptiontype=The type of the caught exception
CodeTemplateContextType.variable.description.exceptionvar=The variable name of the caught exception
CodeTemplateContextType.variable.description.enclosingtype=The type enclosing this method
CodeTemplateContextType.variable.description.typename=Name of the current type
CodeTemplateContextType.variable.description.enclosingmethod=The enclosing method
CodeTemplateContextType.variable.description.bodystatement=Return statement or super call
CodeTemplateContextType.variable.description.returntype=Return type of the enclosing method
CodeTemplateContextType.variable.description.tags=Generated Javadoc tags (@param, @return...)
CodeTemplateContextType.variable.description.seetag=See tag pointing to the overridden method (@see T#m())

CodeTemplateContextType.variable.description.filename=Name of the enclosing compilation unit
CodeTemplateContextType.variable.description.filecomment=Content of code template 'filecomment'
CodeTemplateContextType.variable.description.packagename=Name of the enclosing package
CodeTemplateContextType.variable.description.projectname=Name of the enclosing project

CodeTemplateContextType.validate.unknownvariable=Variable ''{0}'' is unknown.
CodeTemplateContextType.validate.missingvariable=Variable ''{0}'' is required.
CodeTemplateContextType.validate.invalidcomment=Pattern is not a valid Java comment.

TemplateSet.error.missing.attribute= Cannot read template: an attribute is missing.
TemplateSet.error.read= Cannot read template file.
TemplateSet.error.write= Cannot write template file.
 
Context.error.cannot.evaluate= Cannot not evaluate the template.
