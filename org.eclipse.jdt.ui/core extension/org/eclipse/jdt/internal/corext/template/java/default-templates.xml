<?xml version="1.0" encoding="UTF-8"?>

<!--
/*******************************************************************************
 * Copyright (c) 2000, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials 
 * are made available under the terms of the Common Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/ 
-->

<templates><template name="for" description="%Templates.for_array" context="java" enabled="true">for (int ${index} = 0; ${index} &lt; ${array}.length; ${index}++) {
	${line_selection}${cursor}
}</template>
<template name="for" description="%Templates.for_temp" context="java" enabled="true">for (int ${index} = 0; ${index} &lt; ${array}.length; ${index}++) {
	${array_type} ${array_element} = ${array}[${index}];
	${cursor}
}</template>
<template name="for" description="%Templates.for_collection" context="java" enabled="true">for (Iterator ${iterator} = ${collection}.iterator(); ${iterator}.hasNext(); ) {
	${type} ${element} = (${type}) ${iterator}.next();
	${cursor}
}</template>
<template name="while" description="%Templates.while_enumeration" context="java" enabled="true">while (${enumeration}.hasMoreElements()) {
	${type} ${element} = (${type}) ${enumeration}.nextElement();
	${cursor}
}</template>
<template name="while" description="%Templates.while_iterator" context="java" enabled="true">while (${iterator}.hasNext()) {
	${type} ${element} = (${type}) ${iterator}.next();
	${cursor}
}</template>
<template name="do" description="%Templates.do" context="java" enabled="true">do {
	${line_selection}${cursor}
} while (${condition});</template>
<template name="switch" description="%Templates.switch" context="java" enabled="true">switch (${key}) {
	case ${value}:
		${cursor}
		break;

	default:
		break;
}</template>
<template name="if" description="%Templates.if" context="java" enabled="true">if (${condition}) {
	${line_selection}${cursor}
}</template>
<template name="ifelse" description="%Templates.ifelse" context="java" enabled="true">if (${condition}) {
	${cursor}
} else {
	
}</template>
<template name="elseif" description="%Templates.elseif" context="java" enabled="true">else if (${condition}) {
	${cursor}
}</template>
<template name="else" description="%Templates.else" context="java" enabled="true">else {
	${cursor}
}</template>
<template name="try" description="%Templates.try" context="java" enabled="true">try {
	${line_selection}${cursor}
} catch (${Exception} e) {
	// ${todo}: handle exception
}</template>
<template name="catch" description="%Templates.catch" context="java" enabled="true">catch (${Exception} e) {
	${cursor}// ${todo}: handle exception
}</template>
<template name="main" description="%Templates.main" context="java" enabled="true">public static void main(String[] args) {
	${cursor}
}</template>
<template name="public_method" description="%Templates.public_method" context="java" enabled="true">public ${return_type} ${name}(${arguments}) {
	${cursor}
}</template>
<template name="protected_method" description="%Templates.protected_method" context="java" enabled="true">protected ${return_type} ${name}(${arguments}) {
	${cursor}
}</template>
<template name="private_method" description="%Templates.private_method" context="java" enabled="true">private ${return_type} ${name}(${arguments}) {
	${cursor}
}</template>
<template name="private_static_method" description="%Templates.private_static_method" context="java" enabled="true">private static ${return_type} ${name}(${arguments}) {
	${cursor}
}</template>
<template name="instanceof" description="%Templates.instanceof" context="java" enabled="true">if (${name} instanceof ${type}) {
	${type} ${new_name} = (${type})${name};
	${cursor}
}</template>
<template name="cast" description="%Templates.cast" context="java" enabled="true">${type} ${new_name} = (${type}) ${name};</template>
<template name="new" description="%Templates.new" context="java" enabled="true">${type} ${name} = new ${type}(${arguments});</template>
<template name="lazy" description="%Templates.lazy" context="java" enabled="true">if (${name} == null) {
	${name} = new ${type}(${arguments});
	${cursor}
}

return ${name};</template>
<template name="toarray" description="%Templates.toarray" context="java" enabled="true">(${type}[]) ${collection}.toArray(new ${type}[${collection}.size()])</template>
<template name="sysout" description="%Templates.sysout" context="java" enabled="true">System.out.println(${word_selection}${cursor});</template>
<template name="syserr" description="%Templates.syserr" context="java" enabled="true">System.err.println(${word_selection}${cursor});</template>
<template name="&lt;code&gt;" description="%Templates.code_tag" context="javadoc" enabled="true">&lt;code&gt;${word_selection}${cursor}&lt;/code&gt;</template>
<template name="&lt;code&gt;" description="%Templates.code_tag_null" context="javadoc" enabled="true">&lt;code&gt;null&lt;/code&gt;</template>
<template name="&lt;pre&gt;" description="%Templates.pre_tag" context="javadoc" enabled="true">&lt;pre&gt;${word_selection}${cursor}&lt;/pre&gt;</template>
<template name="&lt;b&gt;" description="%Templates.b_tag" context="javadoc" enabled="true">&lt;b&gt;${word_selection}${cursor}&lt;/b&gt;</template>
<template name="&lt;i&gt;" description="%Templates.i_tag" context="javadoc" enabled="true">&lt;i&gt;${word_selection}${cursor}&lt;/i&gt;</template>
<template name="@author" description="%Templates.author" context="javadoc" enabled="true">@author ${user}</template>
<template name="while" description="%Templates.while_condition" context="java" enabled="true">while (${condition}) {
	${line_selection}${cursor}
}</template>
<template name="test" description="%Templates.test" context="java" enabled="true">public void test${name}() {
	${cursor} 
}</template>
<template name="systrace" description="%Templates.systrace" context="java" enabled="true">System.out.println(&quot;${enclosing_type}.${enclosing_method}()&quot;);</template>
</templates>